(()=>{"use strict";var t={};function e(t,e){const s=new Event(e,{bubbles:!0,cancelable:!0});t.dispatchEvent(s)}function s(t){throw new Error(t)}function n(t,e){if(!t)throw new Error(e)}class r{rows;columns;values;constructor(t,e,s){this.rows=t,this.columns=e,n(Number.isInteger(t)&&Number.isInteger(e),"rows and columns must be integers"),n(t>=0&&e>=0,"rows and columns must be at least 0"),n(s.length===t*e),this.values=s}get(t,e){const r=t*this.columns+e;return n(t>=0&&t<this.rows,"row out of bounds"),n(e>=0&&e<this.columns,"column out of bounds"),n(r>=0&&r<this.values.length,"out of bounds"),this.values[r]??s()}forEach(t){this.values.forEach(((e,s)=>{t(Math.floor(s/this.columns),s%this.columns,e)}))}map(t){return new r(this.rows,this.columns,this.values.map(((e,s)=>t(Math.floor(s/this.columns),s%this.columns,e))))}}class o extends Error{}const i=t=>{const e=new Map;return t.forEach((t=>t.variables().forEach((t=>{const s=e.get(t);void 0===s?e.set(t,1):e.set(t,s+1)})))),Array.from(e.keys()).sort(((t,n)=>(e.get(t)??s("should not get here"))-(e.get(n)??s("should not get here"))))[0]??"NO CLAUSES"};class a{clauses;hueristic=i;static buildFormula(t,e){const s=t.filter(Boolean).map((t=>new c(t)));return new a(s,e)}static buildFromClauses(t,e){return new a(t,e)}union(t){return new a(this.clauses.concat(...t.clauses),this.hueristic)}constructor(t,e){this.clauses=t,e&&(this.hueristic=e)}updateFormula(t,e){const s=this.clauses.map((s=>s.update(t,e))).filter((t=>void 0!==t));return new a(s,this.hueristic)}solved(){return!this.clauses.length}solvable(){return this.clauses.reduce(((t,e)=>t&&e.solvable()),!0)}satisfyingAssignment(){return this._satisfyingAssignment()}_satisfyingAssignment(t){if(!this.solvable())return;if(t||(t=new Map),this.solved())return t;for(const e of this.clauses){const s=e.unitClause();if(s){const[e,n]=s;t.set(e,n);const r=this.updateFormula(e,n)._satisfyingAssignment(t);return r?.set(e,n)}}const e=this.hueristic(this.clauses.slice());if(!this.clauses.reduce(((t,s)=>s.variables().has(e)||t),!1))throw new Error(`Hueristic didn't generate a variable in the formula (produced ${e}), an infinite loop will occur`);for(const s of[!0,!1]){const n=this.updateFormula(e,s)._satisfyingAssignment(t);if(n)return n.set(e,s)}}getClauses(){return this.clauses.slice()}toString(){return"SatFormula("+this.clauses.map((t=>`${t.toString()}`)).join("\n and")+"\n)"}}class c{literalMap=new Map;constructor(t){for(const[e,s]of t){const t=this.literalMap.get(e);if(void 0!==t){if(t===!s)throw new o(`Contradiction on variable ${e}`)}else this.literalMap.set(e,s)}}update(t,e){if(!this.literalMap.has(t))return this;const s=[];for(const[n,r]of this.literalMap.entries())if(n!==t)s.push([n,r]);else if(r===e)return;return new c(s)}solvable(){return this.literalMap.size>0}variables(){return new Set(this.literalMap.keys())}unitClause(){if(1===this.literalMap.size){const t=this.literalMap.keys().next().value??s();return[t,this.literalMap.get(t)??s()]}}forEach(t){for(const e of this.literalMap.entries())t(e)}toString(){return Array.from(this.literalMap.entries()).map((t=>{const[e,s]=t;return s?e:`not ${e}`})).join(" or ")}}class l{static makeZoneGroupings(t){const e=new Map;return t.forEach(((t,s,n)=>{e.has(n.color)||e.set(n.color,[]),e.get(n.color)?.push([t,s])})),e}static exactlyOneConstraint(t){const e=[];if(e.push(new c(t.map((([t,e])=>[`${t},${e}`,!0])))),1===t.length)return e;for(const r of function(t){if(n(Number.isInteger(t.length)),n(2<=t.length),n(!0),2===t.length)return[t];const e=[];return function n(r=0,o){if(void 0===o&&(o=[]),2===o.length)return e.push(o),e;for(let e=r;e<t.length;e++){const r=o.slice();r.push(t[e]??s()),n(e+1,r)}return e}()}(t))e.push(new c(r.map((([t,e])=>[`${t},${e}`,!1]))));return e}static eachRegionHasExactlyQueen(t){const e=[];for(const n of t.keys()){const r=t.get(n)??s();if(!(r.length>0))throw new Error("a region must have at least one cell");e.push(...l.exactlyOneConstraint(r))}return e}static eachRowHasExactlyOneQueen(t){const e=[];for(let s=0;s<t.rows;s++){const n=Array.from(Array(t.columns).keys()).map((t=>[s,t]));e.push(...l.exactlyOneConstraint(n))}return e}static eachColumnHasExactlyOneQueen(t){const e=[];for(let s=0;s<t.columns;s++){const n=Array.from(Array(t.rows).keys()).map((t=>[t,s]));e.push(...l.exactlyOneConstraint(n))}return e}static noAdjacentQueens(t){const e=[];return t.forEach(((s,n)=>{(function(t,e){const s=[];for(const n of[-1,0,1])for(const r of[-1,0,1])0===n&&0===r||s.push([t+n,e+r]);return s})(s,n).filter((([e,s])=>0<=e&&e<t.rows&&0<=s&&s<t.columns)).forEach((([t,r])=>{(t>s||t===s&&r>n)&&e.push(new c([[`${s},${n}`,!1],[`${t},${r}`,!1]]))}))})),e}getSolution(t){const e=l.makeZoneGroupings(t),n=[];n.push(...l.eachRegionHasExactlyQueen(e)),n.push(...l.eachRowHasExactlyOneQueen(t)),n.push(...l.eachColumnHasExactlyOneQueen(t)),n.push(...l.noAdjacentQueens(t));const r=a.buildFromClauses(n,(t=>{const n=t.reduce(((t,e)=>t.union(e.variables())),new Set),r=Array.from(e.keys()).sort(((t,n)=>{const r=e.get(t)??s(),o=e.get(n)??s();return r.length-o.length}));for(const t of r){const r=e.get(t)??s();for(const[t,e]of r){const s=`${t},${e}`;if(n.has(s))return s}}return"out of clauses"})),o=r.satisfyingAssignment();if(void 0!==o)return t.map(((t,e,s)=>({queen:o.get(`${t},${e}`)??!1,color:s.color})))}constructor(){l.instance=this}static instance;static getInstance(){return this.instance??new l}}class u{client;algorithm;constructor(t){this.client=new h(t),this.algorithm=l.getInstance()}solve(){const t=this.algorithm.getSolution(this.client.getGrid()),s=f(this.client.getClient()),n=Math.sqrt(s.length);if(void 0===t)throw new Error("No solution found for this game; for LinkedIn, this is typically a bug");s.forEach(((s,r)=>{const o=Math.floor(r/n),i=r%n;t.get(o,i).queen&&(e(s,"mousedown"),e(s,"mouseup"),e(s,"mousedown"),e(s,"mouseup"))}))}}class h{document;constructor(t){this.document=t}getClient(){return this.document}getGrid(){const t=f(this.document),e=Math.sqrt(t.length);if(!Number.isInteger(e))throw new Error("collected cells did not form a perfect grid");if(0===e)throw new Error("no cells found");return function(t,e,s){return new r(t,e,s)}(e,e,t).map(((t,e,s)=>{const n=Array.from(s.classList).filter((t=>t.startsWith("cell-color-")))[0];if(void 0===n)throw new Error("classes did not have color data");const r=n.split("-"),o=r[r.length-1];if(void 0===o)throw new Error;const i=parseInt(o);if(Number.isNaN(i))throw new Error(`can't parse color: ${i}`);let a=!1;const c=s.getElementsByClassName("cell-content")[0];return c&&c.querySelectorAll("div").forEach((t=>{a||=t.className.includes("queen")})),{queen:a,color:i}}))}}function f(t){const e=t.getElementById("queens-grid");if(null===e)throw new Error("wrong  page, or queens grid id is wrong");const s=e.querySelectorAll(".queens-cell-with-border");return Array.from(s)}console.log(window.location.href),window.location.href.startsWith("https://www.linkedin.com/games/queens")&&(console.log("queens!"),new u(document).solve());var g=window;for(var m in t)g[m]=t[m];t.__esModule&&Object.defineProperty(g,"__esModule",{value:!0})})();